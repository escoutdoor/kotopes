// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v3.12.4
// source: favorite.proto

package favorite_v1

import (
	context "context"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	FavoriteV1_Create_FullMethodName        = "/favorite_v1.FavoriteV1/Create"
	FavoriteV1_Delete_FullMethodName        = "/favorite_v1.FavoriteV1/Delete"
	FavoriteV1_ListFavorites_FullMethodName = "/favorite_v1.FavoriteV1/ListFavorites"
)

// FavoriteV1Client is the client API for FavoriteV1 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type FavoriteV1Client interface {
	// Creates user's favorite list item
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	// Deletes user's favorite list item
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Returns user's favorite list
	ListFavorites(ctx context.Context, in *ListFavoritesRequest, opts ...grpc.CallOption) (*ListFavoritesResponse, error)
}

type favoriteV1Client struct {
	cc grpc.ClientConnInterface
}

func NewFavoriteV1Client(cc grpc.ClientConnInterface) FavoriteV1Client {
	return &favoriteV1Client{cc}
}

func (c *favoriteV1Client) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, FavoriteV1_Create_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *favoriteV1Client) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, FavoriteV1_Delete_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *favoriteV1Client) ListFavorites(ctx context.Context, in *ListFavoritesRequest, opts ...grpc.CallOption) (*ListFavoritesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListFavoritesResponse)
	err := c.cc.Invoke(ctx, FavoriteV1_ListFavorites_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FavoriteV1Server is the server API for FavoriteV1 service.
// All implementations must embed UnimplementedFavoriteV1Server
// for forward compatibility.
type FavoriteV1Server interface {
	// Creates user's favorite list item
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	// Deletes user's favorite list item
	Delete(context.Context, *DeleteRequest) (*empty.Empty, error)
	// Returns user's favorite list
	ListFavorites(context.Context, *ListFavoritesRequest) (*ListFavoritesResponse, error)
	mustEmbedUnimplementedFavoriteV1Server()
}

// UnimplementedFavoriteV1Server must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedFavoriteV1Server struct{}

func (UnimplementedFavoriteV1Server) Create(context.Context, *CreateRequest) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (UnimplementedFavoriteV1Server) Delete(context.Context, *DeleteRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (UnimplementedFavoriteV1Server) ListFavorites(context.Context, *ListFavoritesRequest) (*ListFavoritesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListFavorites not implemented")
}
func (UnimplementedFavoriteV1Server) mustEmbedUnimplementedFavoriteV1Server() {}
func (UnimplementedFavoriteV1Server) testEmbeddedByValue()                    {}

// UnsafeFavoriteV1Server may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FavoriteV1Server will
// result in compilation errors.
type UnsafeFavoriteV1Server interface {
	mustEmbedUnimplementedFavoriteV1Server()
}

func RegisterFavoriteV1Server(s grpc.ServiceRegistrar, srv FavoriteV1Server) {
	// If the following call pancis, it indicates UnimplementedFavoriteV1Server was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&FavoriteV1_ServiceDesc, srv)
}

func _FavoriteV1_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FavoriteV1Server).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FavoriteV1_Create_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FavoriteV1Server).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FavoriteV1_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FavoriteV1Server).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FavoriteV1_Delete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FavoriteV1Server).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FavoriteV1_ListFavorites_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFavoritesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FavoriteV1Server).ListFavorites(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FavoriteV1_ListFavorites_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FavoriteV1Server).ListFavorites(ctx, req.(*ListFavoritesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// FavoriteV1_ServiceDesc is the grpc.ServiceDesc for FavoriteV1 service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var FavoriteV1_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "favorite_v1.FavoriteV1",
	HandlerType: (*FavoriteV1Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _FavoriteV1_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _FavoriteV1_Delete_Handler,
		},
		{
			MethodName: "ListFavorites",
			Handler:    _FavoriteV1_ListFavorites_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "favorite.proto",
}
